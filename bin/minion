#!/usr/bin/env bash

# minion functions
_help()
{
    local COLOR='\033[1;32m' # Light Green
    local NC='\033[0m' # No Color
    echo -e "\n${COLOR}Usage: $0 [OPTION]${NC}\n" >&2
    echo "Options:"
    echo -e "   ${COLOR}help, -h${NC}        Display this help and exit"
    echo -e "   ${COLOR}console${NC}         Initializes bash command line on PHP server"
    echo -e "   ${COLOR}start${NC}           Initializes development servers"
    echo -e "   ${COLOR}stop${NC}            Finish development servers"
    echo -e "   ${COLOR}restart${NC}         Force reboot of development servers"
    echo -e "   ${COLOR}destroy${NC}         Stop and remove containers, networks, images, and volumes"
    exit 1
}

_print_options()
{
    PS3='Select Option: '
    OPTIONS=(
    "Help"
    "Console"
    "Start"
    "Stop"
    "Restart"
    "Destroy"
    "Quit"
    )
    select OPT in "${OPTIONS[@]}"
    do
        echo "${OPT,,}"
        break;
    done

}

_execute()
{
    case $1 in
        "-h"|"help")
            _help
            ;;
        "start")
            echo "Starting..."
            docker-compose up -d
            ;;
        "stop")
            echo "Stoping..."
            docker stop $(docker ps -a -q)
#           docker-compose stop
            ;;
        "destroy")
            echo "Destroying..."
            docker-compose down
            ;;
        "restart")
            echo "Restarting..."
            docker-compose up -d --force-recreate
            ;;
        "console")
            echo -e "Starting Console...\n"
            docker-compose exec php bash
            ;;
        "quit")
            ;;
        *)
            echo -e "INVALID OPTION...\n\n"
            OPTION=$(_print_options)
            _execute ${OPTION}
            ;;
    esac
}

if [ "$1" != "" ]; then
    _execute "$1"
else
    OPTION=$(_print_options)
    _execute ${OPTION}
fi







